{"ast":null,"code":"var _jsxFileName = \"/Users/mvicente/Projects/simple-dating-app/frontend/src/components/SignIn.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Button, FormControl, FormLabel, Input, VStack, Heading, useToast, HStack } from '@chakra-ui/react';\nimport { useNavigate } from 'react-router-dom';\nimport { useProfile } from '../context/ProfileContext';\nimport { API_URL } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignIn = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [isNewAccount, setIsNewAccount] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const {\n    setProfile\n  } = useProfile();\n  const toast = useToast();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const loadRandomTestProfile = () => {\n    const testEmails = ['alex.thompson@example.com', 'sarah.chen@example.com', 'marcus.johnson@example.com'];\n    const randomEmail = testEmails[Math.floor(Math.random() * testEmails.length)];\n    setFormData({\n      email: randomEmail,\n      password: 'test123',\n      confirmPassword: ''\n    });\n    setIsNewAccount(false);\n    toast({\n      title: 'Test Profile Loaded',\n      description: `Loaded profile for ${randomEmail.split('@')[0].replace('.', ' ')}`,\n      status: 'info',\n      duration: 3000,\n      isClosable: true\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${API_URL}/api/signin`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(formData),\n        credentials: 'include',\n        mode: 'cors'\n      });\n      if (!response.ok) {\n        const data = await response.json().catch(() => ({}));\n        if (response.status === 401) {\n          setIsNewAccount(true);\n          localStorage.setItem('isNewAccount', 'true');\n          localStorage.setItem('newAccountEmail', formData.email);\n          navigate('/');\n        } else {\n          throw new Error(data.error || `Failed to sign in (${response.status})`);\n        }\n        return;\n      }\n      const data = await response.json();\n      if (!data || typeof data !== 'object') {\n        throw new Error('Invalid response from server');\n      }\n      setProfile(data);\n      const isTestProfile = formData.email.endsWith('@example.com');\n      if (isTestProfile) {\n        navigate('/waiting');\n      } else {\n        localStorage.setItem('isNewAccount', 'true');\n        localStorage.setItem('newAccountEmail', formData.email);\n        navigate('/profile');\n      }\n      toast({\n        title: 'Success!',\n        description: 'You have successfully signed in.',\n        status: 'success',\n        duration: 3000,\n        isClosable: true\n      });\n    } catch (error) {\n      console.error('Sign in error:', error);\n      let errorMessage = error.message;\n      if (error.name === 'TypeError' && error.message.includes('Failed to fetch')) {\n        errorMessage = 'Network error: Please check your internet connection';\n      }\n      toast({\n        title: 'Error',\n        description: errorMessage || 'Failed to sign in. Please try again.',\n        status: 'error',\n        duration: 5000,\n        isClosable: true\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    maxW: \"md\",\n    mx: \"auto\",\n    mt: 8,\n    p: 6,\n    borderWidth: 1,\n    borderRadius: 8,\n    boxShadow: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 6,\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: isNewAccount ? 'Create Account' : 'Sign In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        style: {\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(VStack, {\n          spacing: 4,\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            isRequired: true,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"email\",\n              name: \"email\",\n              value: formData.email,\n              onChange: handleChange,\n              placeholder: \"Enter your email\",\n              disabled: isNewAccount || isLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            isRequired: true,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              name: \"password\",\n              value: formData.password,\n              onChange: handleChange,\n              placeholder: \"Enter your password\",\n              disabled: isLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), isNewAccount && /*#__PURE__*/_jsxDEV(FormControl, {\n            isRequired: true,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              name: \"confirmPassword\",\n              value: formData.confirmPassword,\n              onChange: handleChange,\n              placeholder: \"Confirm your password\",\n              disabled: isLoading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            colorScheme: \"blue\",\n            width: \"100%\",\n            isLoading: isLoading,\n            loadingText: isNewAccount ? 'Creating Account...' : 'Signing in...',\n            children: isNewAccount ? 'Create Account' : 'Sign In'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        spacing: 4,\n        width: \"100%\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline\",\n          colorScheme: \"green\",\n          onClick: loadRandomTestProfile,\n          flex: 1,\n          isDisabled: isNewAccount || isLoading,\n          children: \"Load Test Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline\",\n          colorScheme: \"purple\",\n          onClick: () => {\n            setIsNewAccount(true);\n            setFormData(prev => ({\n              ...prev,\n              password: '',\n              confirmPassword: ''\n            }));\n          },\n          flex: 1,\n          isDisabled: isNewAccount || isLoading,\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s(SignIn, \"p0d5fGKsEeYfUEVosMfsFhERVNM=\", false, function () {\n  return [useNavigate, useProfile, useToast];\n});\n_c = SignIn;\nexport default SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","useState","Box","Button","FormControl","FormLabel","Input","VStack","Heading","useToast","HStack","useNavigate","useProfile","API_URL","jsxDEV","_jsxDEV","SignIn","_s","formData","setFormData","email","password","confirmPassword","isNewAccount","setIsNewAccount","isLoading","setIsLoading","navigate","setProfile","toast","handleChange","e","name","value","target","prev","loadRandomTestProfile","testEmails","randomEmail","Math","floor","random","length","title","description","split","replace","status","duration","isClosable","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","credentials","mode","ok","data","json","catch","localStorage","setItem","Error","error","isTestProfile","endsWith","console","errorMessage","message","includes","maxW","mx","mt","p","borderWidth","borderRadius","boxShadow","children","spacing","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","style","width","isRequired","type","onChange","placeholder","disabled","colorScheme","loadingText","variant","onClick","flex","isDisabled","_c","$RefreshReg$"],"sources":["/Users/mvicente/Projects/simple-dating-app/frontend/src/components/SignIn.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  VStack,\n  Heading,\n  useToast,\n  HStack,\n} from '@chakra-ui/react';\nimport { useNavigate } from 'react-router-dom';\nimport { useProfile } from '../context/ProfileContext';\nimport { API_URL } from '../config';\n\nconst SignIn = () => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: '',\n  });\n  const [isNewAccount, setIsNewAccount] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n  const { setProfile } = useProfile();\n  const toast = useToast();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const loadRandomTestProfile = () => {\n    const testEmails = [\n      'alex.thompson@example.com',\n      'sarah.chen@example.com',\n      'marcus.johnson@example.com'\n    ];\n    const randomEmail = testEmails[Math.floor(Math.random() * testEmails.length)];\n    setFormData({\n      email: randomEmail,\n      password: 'test123',\n      confirmPassword: ''\n    });\n    setIsNewAccount(false);\n    toast({\n      title: 'Test Profile Loaded',\n      description: `Loaded profile for ${randomEmail.split('@')[0].replace('.', ' ')}`,\n      status: 'info',\n      duration: 3000,\n      isClosable: true,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    try {\n      const response = await fetch(`${API_URL}/api/signin`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n        },\n        body: JSON.stringify(formData),\n        credentials: 'include',\n        mode: 'cors'\n      });\n\n      if (!response.ok) {\n        const data = await response.json().catch(() => ({}));\n        if (response.status === 401) {\n          setIsNewAccount(true);\n          localStorage.setItem('isNewAccount', 'true');\n          localStorage.setItem('newAccountEmail', formData.email);\n          navigate('/');\n        } else {\n          throw new Error(data.error || `Failed to sign in (${response.status})`);\n        }\n        return;\n      }\n\n      const data = await response.json();\n      if (!data || typeof data !== 'object') {\n        throw new Error('Invalid response from server');\n      }\n\n      setProfile(data);\n      \n      const isTestProfile = formData.email.endsWith('@example.com');\n      if (isTestProfile) {\n        navigate('/waiting');\n      } else {\n        localStorage.setItem('isNewAccount', 'true');\n        localStorage.setItem('newAccountEmail', formData.email);\n        navigate('/profile');\n      }\n\n      toast({\n        title: 'Success!',\n        description: 'You have successfully signed in.',\n        status: 'success',\n        duration: 3000,\n        isClosable: true,\n      });\n    } catch (error) {\n      console.error('Sign in error:', error);\n      let errorMessage = error.message;\n      \n      if (error.name === 'TypeError' && error.message.includes('Failed to fetch')) {\n        errorMessage = 'Network error: Please check your internet connection';\n      }\n      \n      toast({\n        title: 'Error',\n        description: errorMessage || 'Failed to sign in. Please try again.',\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <Box maxW=\"md\" mx=\"auto\" mt={8} p={6} borderWidth={1} borderRadius={8} boxShadow=\"lg\">\n      <VStack spacing={6}>\n        <Heading>{isNewAccount ? 'Create Account' : 'Sign In'}</Heading>\n        <form onSubmit={handleSubmit} style={{ width: '100%' }}>\n          <VStack spacing={4}>\n            <FormControl isRequired>\n              <FormLabel>Email</FormLabel>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleChange}\n                placeholder=\"Enter your email\"\n                disabled={isNewAccount || isLoading}\n              />\n            </FormControl>\n            <FormControl isRequired>\n              <FormLabel>Password</FormLabel>\n              <Input\n                type=\"password\"\n                name=\"password\"\n                value={formData.password}\n                onChange={handleChange}\n                placeholder=\"Enter your password\"\n                disabled={isLoading}\n              />\n            </FormControl>\n            {isNewAccount && (\n              <FormControl isRequired>\n                <FormLabel>Confirm Password</FormLabel>\n                <Input\n                  type=\"password\"\n                  name=\"confirmPassword\"\n                  value={formData.confirmPassword}\n                  onChange={handleChange}\n                  placeholder=\"Confirm your password\"\n                  disabled={isLoading}\n                />\n              </FormControl>\n            )}\n            <Button \n              type=\"submit\" \n              colorScheme=\"blue\" \n              width=\"100%\"\n              isLoading={isLoading}\n              loadingText={isNewAccount ? 'Creating Account...' : 'Signing in...'}\n            >\n              {isNewAccount ? 'Create Account' : 'Sign In'}\n            </Button>\n          </VStack>\n        </form>\n        <HStack spacing={4} width=\"100%\">\n          <Button\n            variant=\"outline\"\n            colorScheme=\"green\"\n            onClick={loadRandomTestProfile}\n            flex={1}\n            isDisabled={isNewAccount || isLoading}\n          >\n            Load Test Profile\n          </Button>\n          <Button\n            variant=\"outline\"\n            colorScheme=\"purple\"\n            onClick={() => {\n              setIsNewAccount(true);\n              setFormData(prev => ({\n                ...prev,\n                password: '',\n                confirmPassword: ''\n              }));\n            }}\n            flex={1}\n            isDisabled={isNewAccount || isLoading}\n          >\n            Create Account\n          </Button>\n        </HStack>\n      </VStack>\n    </Box>\n  );\n};\n\nexport default SignIn; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}