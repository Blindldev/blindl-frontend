{"ast":null,"code":"'use client';\n\nvar _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useCallbackRef } from './use-callback-ref.mjs';\nfunction useInterval(callback, delay) {\n  _s();\n  const fn = useCallbackRef(callback);\n  useEffect(() => {\n    let intervalId = null;\n    const tick = () => fn();\n    if (delay !== null) {\n      intervalId = window.setInterval(tick, delay);\n    }\n    return () => {\n      if (intervalId) {\n        window.clearInterval(intervalId);\n      }\n    };\n  }, [delay, fn]);\n}\n_s(useInterval, \"7buXTRMG7ou0/ydt+h8xeOHrCAQ=\", false, function () {\n  return [useCallbackRef];\n});\nexport { useInterval };","map":{"version":3,"names":["_s","$RefreshSig$","useEffect","useCallbackRef","useInterval","callback","delay","fn","intervalId","tick","window","setInterval","clearInterval"],"sources":["/Users/mvicente/Projects/simple-dating-app/frontend/src/node_modules/@chakra-ui/hooks/dist/esm/use-interval.mjs"],"sourcesContent":["'use client';\nimport { useEffect } from 'react';\nimport { useCallbackRef } from './use-callback-ref.mjs';\n\nfunction useInterval(callback, delay) {\n  const fn = useCallbackRef(callback);\n  useEffect(() => {\n    let intervalId = null;\n    const tick = () => fn();\n    if (delay !== null) {\n      intervalId = window.setInterval(tick, delay);\n    }\n    return () => {\n      if (intervalId) {\n        window.clearInterval(intervalId);\n      }\n    };\n  }, [delay, fn]);\n}\n\nexport { useInterval };\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,EAAA,GAAAC,YAAA;AACb,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,cAAc,QAAQ,wBAAwB;AAEvD,SAASC,WAAWA,CAACC,QAAQ,EAAEC,KAAK,EAAE;EAAAN,EAAA;EACpC,MAAMO,EAAE,GAAGJ,cAAc,CAACE,QAAQ,CAAC;EACnCH,SAAS,CAAC,MAAM;IACd,IAAIM,UAAU,GAAG,IAAI;IACrB,MAAMC,IAAI,GAAGA,CAAA,KAAMF,EAAE,CAAC,CAAC;IACvB,IAAID,KAAK,KAAK,IAAI,EAAE;MAClBE,UAAU,GAAGE,MAAM,CAACC,WAAW,CAACF,IAAI,EAAEH,KAAK,CAAC;IAC9C;IACA,OAAO,MAAM;MACX,IAAIE,UAAU,EAAE;QACdE,MAAM,CAACE,aAAa,CAACJ,UAAU,CAAC;MAClC;IACF,CAAC;EACH,CAAC,EAAE,CAACF,KAAK,EAAEC,EAAE,CAAC,CAAC;AACjB;AAACP,EAAA,CAdQI,WAAW;EAAA,QACPD,cAAc;AAAA;AAe3B,SAASC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}