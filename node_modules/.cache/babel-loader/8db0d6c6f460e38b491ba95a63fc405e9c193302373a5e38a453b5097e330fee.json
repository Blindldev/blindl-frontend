{"ast":null,"code":"'use client';\n\nvar _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nfunction useButtonType(value) {\n  _s();\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback(node => {\n    if (!node) return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return {\n    ref: refCallback,\n    type\n  };\n}\n_s(useButtonType, \"DXuLO3eL64hIapddJq6fgf+GtcU=\");\nexport { useButtonType };","map":{"version":3,"names":["_s","$RefreshSig$","useState","useCallback","useButtonType","value","isButton","setIsButton","refCallback","node","tagName","type","ref"],"sources":["/Users/mvicente/Projects/simple-dating-app/frontend/src/node_modules/@chakra-ui/react/dist/esm/button/use-button-type.mjs"],"sourcesContent":["'use client';\nimport { useState, useCallback } from 'react';\n\nfunction useButtonType(value) {\n  const [isButton, setIsButton] = useState(!value);\n  const refCallback = useCallback((node) => {\n    if (!node)\n      return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  const type = isButton ? \"button\" : void 0;\n  return { ref: refCallback, type };\n}\n\nexport { useButtonType };\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,EAAA,GAAAC,YAAA;AACb,SAASC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAE7C,SAASC,aAAaA,CAACC,KAAK,EAAE;EAAAL,EAAA;EAC5B,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,CAACG,KAAK,CAAC;EAChD,MAAMG,WAAW,GAAGL,WAAW,CAAEM,IAAI,IAAK;IACxC,IAAI,CAACA,IAAI,EACP;IACFF,WAAW,CAACE,IAAI,CAACC,OAAO,KAAK,QAAQ,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EACN,MAAMC,IAAI,GAAGL,QAAQ,GAAG,QAAQ,GAAG,KAAK,CAAC;EACzC,OAAO;IAAEM,GAAG,EAAEJ,WAAW;IAAEG;EAAK,CAAC;AACnC;AAACX,EAAA,CATQI,aAAa;AAWtB,SAASA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}