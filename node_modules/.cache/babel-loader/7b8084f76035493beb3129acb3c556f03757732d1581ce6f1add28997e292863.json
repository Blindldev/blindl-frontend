{"ast":null,"code":"'use client';\n\nvar _s = $RefreshSig$();\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps, defineStyle } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils';\nimport { getStatusColorScheme, AlertProvider, AlertStylesProvider } from './alert-context.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\nconst Alert = _s(forwardRef(_c = _s(function Alert2(props, ref) {\n  var _props$colorScheme;\n  _s();\n  const {\n    status = \"info\",\n    addRole = true,\n    ...rest\n  } = omitThemingProps(props);\n  const colorScheme = (_props$colorScheme = props.colorScheme) !== null && _props$colorScheme !== void 0 ? _props$colorScheme : getStatusColorScheme(status);\n  const styles = useMultiStyleConfig(\"Alert\", {\n    ...props,\n    colorScheme\n  });\n  const alertStyles = defineStyle({\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    position: \"relative\",\n    overflow: \"hidden\",\n    ...styles.container\n  });\n  return /* @__PURE__ */jsx(AlertProvider, {\n    value: {\n      status\n    },\n    children: /* @__PURE__ */jsx(AlertStylesProvider, {\n      value: styles,\n      children: /* @__PURE__ */jsx(chakra.div, {\n        \"data-status\": status,\n        role: addRole ? \"alert\" : void 0,\n        ref,\n        ...rest,\n        className: cx(\"chakra-alert\", props.className),\n        __css: alertStyles\n      })\n    })\n  });\n}, \"4weJZXnSi/kojZCmc0wy6twR2LQ=\", false, function () {\n  return [useMultiStyleConfig];\n})), \"4weJZXnSi/kojZCmc0wy6twR2LQ=\", false, function () {\n  return [useMultiStyleConfig];\n});\n_c2 = Alert;\nAlert.displayName = \"Alert\";\nexport { Alert };\nvar _c, _c2;\n$RefreshReg$(_c, \"Alert$forwardRef\");\n$RefreshReg$(_c2, \"Alert\");","map":{"version":3,"names":["_s","$RefreshSig$","jsx","omitThemingProps","defineStyle","cx","getStatusColorScheme","AlertProvider","AlertStylesProvider","useMultiStyleConfig","forwardRef","chakra","Alert","_c","Alert2","props","ref","_props$colorScheme","status","addRole","rest","colorScheme","styles","alertStyles","width","display","alignItems","position","overflow","container","value","children","div","role","className","__css","_c2","displayName","$RefreshReg$"],"sources":["/Users/mvicente/Projects/simple-dating-app/frontend/src/node_modules/@chakra-ui/react/dist/esm/alert/alert.mjs"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { omitThemingProps, defineStyle } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils';\nimport { getStatusColorScheme, AlertProvider, AlertStylesProvider } from './alert-context.mjs';\nimport { useMultiStyleConfig } from '../system/use-style-config.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst Alert = forwardRef(function Alert2(props, ref) {\n  const { status = \"info\", addRole = true, ...rest } = omitThemingProps(props);\n  const colorScheme = props.colorScheme ?? getStatusColorScheme(status);\n  const styles = useMultiStyleConfig(\"Alert\", { ...props, colorScheme });\n  const alertStyles = defineStyle({\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    position: \"relative\",\n    overflow: \"hidden\",\n    ...styles.container\n  });\n  return /* @__PURE__ */ jsx(AlertProvider, { value: { status }, children: /* @__PURE__ */ jsx(AlertStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      \"data-status\": status,\n      role: addRole ? \"alert\" : void 0,\n      ref,\n      ...rest,\n      className: cx(\"chakra-alert\", props.className),\n      __css: alertStyles\n    }\n  ) }) });\n});\nAlert.displayName = \"Alert\";\n\nexport { Alert };\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,EAAA,GAAAC,YAAA;AACb,SAASC,GAAG,QAAQ,mBAAmB;AACvC,SAASC,gBAAgB,EAAEC,WAAW,QAAQ,0BAA0B;AACxE,SAASC,EAAE,QAAQ,kBAAkB;AACrC,SAASC,oBAAoB,EAAEC,aAAa,EAAEC,mBAAmB,QAAQ,qBAAqB;AAC9F,SAASC,mBAAmB,QAAQ,gCAAgC;AACpE,SAASC,UAAU,QAAQ,2BAA2B;AACtD,SAASC,MAAM,QAAQ,uBAAuB;AAE9C,MAAMC,KAAK,GAAAZ,EAAA,CAAGU,UAAU,CAAAG,EAAA,GAAAb,EAAA,CAAC,SAASc,MAAMA,CAACC,KAAK,EAAEC,GAAG,EAAE;EAAA,IAAAC,kBAAA;EAAAjB,EAAA;EACnD,MAAM;IAAEkB,MAAM,GAAG,MAAM;IAAEC,OAAO,GAAG,IAAI;IAAE,GAAGC;EAAK,CAAC,GAAGjB,gBAAgB,CAACY,KAAK,CAAC;EAC5E,MAAMM,WAAW,IAAAJ,kBAAA,GAAGF,KAAK,CAACM,WAAW,cAAAJ,kBAAA,cAAAA,kBAAA,GAAIX,oBAAoB,CAACY,MAAM,CAAC;EACrE,MAAMI,MAAM,GAAGb,mBAAmB,CAAC,OAAO,EAAE;IAAE,GAAGM,KAAK;IAAEM;EAAY,CAAC,CAAC;EACtE,MAAME,WAAW,GAAGnB,WAAW,CAAC;IAC9BoB,KAAK,EAAE,MAAM;IACbC,OAAO,EAAE,MAAM;IACfC,UAAU,EAAE,QAAQ;IACpBC,QAAQ,EAAE,UAAU;IACpBC,QAAQ,EAAE,QAAQ;IAClB,GAAGN,MAAM,CAACO;EACZ,CAAC,CAAC;EACF,OAAO,eAAgB3B,GAAG,CAACK,aAAa,EAAE;IAAEuB,KAAK,EAAE;MAAEZ;IAAO,CAAC;IAAEa,QAAQ,EAAE,eAAgB7B,GAAG,CAACM,mBAAmB,EAAE;MAAEsB,KAAK,EAAER,MAAM;MAAES,QAAQ,EAAE,eAAgB7B,GAAG,CAC9JS,MAAM,CAACqB,GAAG,EACV;QACE,aAAa,EAAEd,MAAM;QACrBe,IAAI,EAAEd,OAAO,GAAG,OAAO,GAAG,KAAK,CAAC;QAChCH,GAAG;QACH,GAAGI,IAAI;QACPc,SAAS,EAAE7B,EAAE,CAAC,cAAc,EAAEU,KAAK,CAACmB,SAAS,CAAC;QAC9CC,KAAK,EAAEZ;MACT,CACF;IAAE,CAAC;EAAE,CAAC,CAAC;AACT,CAAC;EAAA,QApBgBd,mBAAmB;AAAA,EAoBnC,CAAC;EAAA,QApBeA,mBAAmB;AAAA,EAoBlC;AAAC2B,GAAA,GAvBGxB,KAAK;AAwBXA,KAAK,CAACyB,WAAW,GAAG,OAAO;AAE3B,SAASzB,KAAK;AAAG,IAAAC,EAAA,EAAAuB,GAAA;AAAAE,YAAA,CAAAzB,EAAA;AAAAyB,YAAA,CAAAF,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}