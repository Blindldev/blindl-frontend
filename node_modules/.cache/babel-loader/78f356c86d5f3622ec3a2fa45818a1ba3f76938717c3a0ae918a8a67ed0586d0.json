{"ast":null,"code":"var _jsxFileName = \"/Users/mvicente/Projects/simple-dating-app/frontend/src/components/ProfileForm.jsx\",\n  _s = $RefreshSig$();\nimport { Box, VStack, Text, Container, Heading, FormControl, FormLabel, Input, Textarea, Select, Button, useToast, Modal, ModalOverlay, ModalContent, ModalHeader, ModalBody, ModalCloseButton, useDisclosure, Wrap, WrapItem, HStack, Icon, Link } from '@chakra-ui/react';\nimport { FaInstagram } from 'react-icons/fa';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useProfile } from '../context/ProfileContext';\nimport { Avatar, IconButton, InputGroup, InputRightElement, Spinner, Progress, Alert, AlertIcon, useColorModeValue, SimpleGrid, Checkbox, CheckboxGroup } from '@chakra-ui/react';\nimport { ViewIcon, ViewOffIcon, CheckIcon, CloseIcon } from '@chakra-ui/icons';\n\n// Constants\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAX_FILE_SIZE = 5 * 1024 * 1024; // 5MB\nconst ALLOWED_TYPES = ['image/jpeg', 'image/png', 'image/gif'];\nconst MAX_DIMENSION = 800;\nconst COMPRESSION_QUALITY = 0.7;\nconst ProfileForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    setProfile\n  } = useProfile();\n  const toast = useToast();\n  const bgColor = useColorModeValue('white', 'gray.800');\n  const borderColor = useColorModeValue('gray.200', 'gray.700');\n\n  // State\n  const [showPassword, setShowPassword] = useState(false);\n  const [isUploading, setIsUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploadError, setUploadError] = useState(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    age: 18,\n    location: '',\n    occupation: '',\n    education: '',\n    bio: '',\n    photo: null,\n    interests: '',\n    hobbies: '',\n    languages: '',\n    relationshipGoals: '',\n    smoking: '',\n    drinking: '',\n    firstDateIdeas: '',\n    password: ''\n  });\n  const relationshipGoals = ['Casual Dating', 'Serious Relationship', 'Marriage', 'Friendship First', 'Open to All'];\n  const interestEmojis = [{\n    emoji: '🎨',\n    label: 'Art'\n  }, {\n    emoji: '🎵',\n    label: 'Music'\n  }, {\n    emoji: '��',\n    label: 'Reading'\n  }, {\n    emoji: '✈️',\n    label: 'Travel'\n  }, {\n    emoji: '🍳',\n    label: 'Cooking'\n  }, {\n    emoji: '🎮',\n    label: 'Gaming'\n  }, {\n    emoji: '🏃',\n    label: 'Fitness'\n  }, {\n    emoji: '🎬',\n    label: 'Movies'\n  }, {\n    emoji: '📸',\n    label: 'Photography'\n  }, {\n    emoji: '🎭',\n    label: 'Theater'\n  }, {\n    emoji: '🏔️',\n    label: 'Outdoors'\n  }, {\n    emoji: '🎪',\n    label: 'Circus'\n  }, {\n    emoji: '💃',\n    label: 'Dance'\n  }, {\n    emoji: '🎨',\n    label: 'Design'\n  }, {\n    emoji: '👕',\n    label: 'Fashion'\n  }];\n  const hobbyEmojis = [{\n    emoji: '🏊',\n    label: 'Swimming'\n  }, {\n    emoji: '🚴',\n    label: 'Cycling'\n  }, {\n    emoji: '🎾',\n    label: 'Tennis'\n  }, {\n    emoji: '🏀',\n    label: 'Basketball'\n  }, {\n    emoji: '⚽',\n    label: 'Soccer'\n  }, {\n    emoji: '🎯',\n    label: 'Archery'\n  }, {\n    emoji: '🎨',\n    label: 'Painting'\n  }, {\n    emoji: '🎸',\n    label: 'Guitar'\n  }, {\n    emoji: '🎹',\n    label: 'Piano'\n  }, {\n    emoji: '🎭',\n    label: 'Acting'\n  }, {\n    emoji: '📝',\n    label: 'Writing'\n  }, {\n    emoji: '🧘',\n    label: 'Yoga'\n  }, {\n    emoji: '💃',\n    label: 'Dancing'\n  }, {\n    emoji: '🌱',\n    label: 'Gardening'\n  }, {\n    emoji: '♟️',\n    label: 'Chess'\n  }];\n  const [selectedInterests, setSelectedInterests] = useState([]);\n  const [selectedHobbies, setSelectedHobbies] = useState([]);\n\n  // Update formData when interests or hobbies change\n  useEffect(() => {\n    setFormData(prev => ({\n      ...prev,\n      interests: selectedInterests.join(', '),\n      hobbies: selectedHobbies.join(', ')\n    }));\n  }, [selectedInterests, selectedHobbies]);\n\n  // Memoized constants\n  const chicagoNeighborhoods = ['Old Town', 'Logan Square', 'Lincoln Park', 'Lakeview', 'Wicker Park', 'River North', 'Gold Coast', 'West Loop', 'South Loop', 'Bucktown', 'Wrigleyville', 'Andersonville', 'Pilsen', 'Hyde Park', 'Lincoln Square', 'Ukrainian Village', 'Bridgeport', 'Ravenswood', 'Edgewater', 'Uptown'];\n  const firstDateIdeas = ['Grab coffee at a local cafe', 'Take a walk in the park', 'Visit a museum', 'Go for drinks at a bar', 'Have dinner at a restaurant', 'Watch a movie', 'Attend a sports game', 'Go to a concert', 'Take a cooking class', 'Visit an art gallery', 'Go bowling', 'Take a boat tour', 'Visit a farmers market', 'Go to a comedy show', 'Take a pottery class'];\n  const educationOptions = ['High School', 'Some College', 'Associate Degree', 'Bachelor\\'s Degree', 'Master\\'s Degree', 'Doctorate'];\n  const smokingOptions = ['Just Drink', 'Just Smoke (cigs)', 'Just Smoke (weed)', 'Everything', 'None'];\n  const drinkingOptions = ['Just Smoke (cigs)', 'Just Smoke (weed)', 'Everything', 'None'];\n\n  // Optimized image compression\n  const compressImage = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = event => {\n        const img = new Image();\n        img.onload = () => {\n          const canvas = document.createElement('canvas');\n          let {\n            width,\n            height\n          } = img;\n\n          // Calculate new dimensions while maintaining aspect ratio\n          if (width > height && width > MAX_DIMENSION) {\n            height = Math.round(height * MAX_DIMENSION / width);\n            width = MAX_DIMENSION;\n          } else if (height > MAX_DIMENSION) {\n            width = Math.round(width * MAX_DIMENSION / height);\n            height = MAX_DIMENSION;\n          }\n          canvas.width = width;\n          canvas.height = height;\n          const ctx = canvas.getContext('2d');\n          ctx.drawImage(img, 0, 0, width, height);\n          canvas.toBlob(blob => {\n            if (blob) {\n              resolve(blob);\n            } else {\n              reject(new Error('Failed to compress image'));\n            }\n          }, file.type, COMPRESSION_QUALITY);\n        };\n        img.onerror = () => reject(new Error('Failed to load image'));\n        img.src = event.target.result;\n      };\n      reader.onerror = () => reject(new Error('Failed to read file'));\n      reader.readAsDataURL(file);\n    });\n  };\n\n  // Optimized photo upload handler\n  const handlePhotoChange = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    setUploadError(null);\n    setUploadProgress(0);\n    setIsUploading(true);\n    try {\n      if (!ALLOWED_TYPES.includes(file.type)) {\n        throw new Error('Invalid file type. Please upload JPG, PNG, or GIF.');\n      }\n      if (file.size > MAX_FILE_SIZE) {\n        throw new Error('File too large. Maximum size is 5MB.');\n      }\n\n      // Simulate upload progress\n      const progressInterval = setInterval(() => {\n        setUploadProgress(prev => {\n          if (prev >= 90) {\n            clearInterval(progressInterval);\n            return 90;\n          }\n          return prev + 10;\n        });\n      }, 200);\n      const compressedFile = await compressImage(file);\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        const newPhoto = reader.result;\n        setFormData(prev => ({\n          ...prev,\n          photo: newPhoto\n        }));\n        // Immediately update the profile context\n        setProfile(prev => ({\n          ...prev,\n          photo: newPhoto\n        }));\n        setUploadProgress(100);\n        setTimeout(() => {\n          setIsUploading(false);\n          setUploadProgress(0);\n          toast({\n            title: 'Photo uploaded successfully',\n            status: 'success',\n            duration: 3000,\n            isClosable: true\n          });\n        }, 500);\n      };\n      reader.readAsDataURL(compressedFile);\n    } catch (error) {\n      setIsUploading(false);\n      setUploadProgress(0);\n      setUploadError(error.message);\n      toast({\n        title: 'Upload failed',\n        description: error.message,\n        status: 'error',\n        duration: 5000,\n        isClosable: true\n      });\n    }\n  };\n\n  // Optimized form change handler\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Optimized form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/profile`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Failed to create profile');\n      }\n      const profile = await response.json();\n      setProfile(profile);\n\n      // Clear both isNewAccount and newAccountEmail flags\n      localStorage.removeItem('isNewAccount');\n      localStorage.removeItem('newAccountEmail');\n      navigate('/waiting');\n      toast({\n        title: 'Success!',\n        description: 'Your profile has been created.',\n        status: 'success',\n        duration: 3000,\n        isClosable: true\n      });\n    } catch (error) {\n      console.error('Profile creation error:', error);\n      toast({\n        title: 'Error',\n        description: error.message || 'Failed to create profile. Please try again.',\n        status: 'error',\n        duration: 5000,\n        isClosable: true\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    maxW: \"container.md\",\n    mx: \"auto\",\n    p: 4,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(VStack, {\n        spacing: 4,\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Profile Photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(VStack, {\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              position: \"relative\",\n              children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                size: \"xl\",\n                src: formData.photo,\n                name: formData.name,\n                mb: 2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 17\n              }, this), isUploading && /*#__PURE__*/_jsxDEV(Box, {\n                position: \"absolute\",\n                top: \"0\",\n                left: \"0\",\n                right: \"0\",\n                bottom: \"0\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                bg: \"blackAlpha.500\",\n                borderRadius: \"full\",\n                children: /*#__PURE__*/_jsxDEV(Spinner, {\n                  color: \"white\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"file\",\n              accept: \"image/*\",\n              onChange: handlePhotoChange,\n              size: \"sm\",\n              display: \"none\",\n              id: \"photo-upload\",\n              disabled: isUploading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              as: \"label\",\n              htmlFor: \"photo-upload\",\n              colorScheme: \"blue\",\n              size: \"sm\",\n              cursor: isUploading ? \"not-allowed\" : \"pointer\",\n              isLoading: isUploading,\n              loadingText: \"Uploading...\",\n              children: \"Upload Photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this), uploadProgress > 0 && uploadProgress < 100 && /*#__PURE__*/_jsxDEV(Progress, {\n              value: uploadProgress,\n              size: \"sm\",\n              width: \"100%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, this), uploadError && /*#__PURE__*/_jsxDEV(Alert, {\n              status: \"error\",\n              size: \"sm\",\n              borderRadius: \"md\",\n              children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 19\n              }, this), uploadError]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              fontSize: \"xs\",\n              color: \"gray.500\",\n              children: \"Supported formats: JPG, PNG, GIF (max 5MB)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          isRequired: true,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"name\",\n            value: formData.name,\n            onChange: handleChange,\n            placeholder: \"Your name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          isRequired: true,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"age\",\n            value: formData.age,\n            onChange: handleChange,\n            type: \"number\",\n            min: 18,\n            max: 100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          isRequired: true,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Neighborhood\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            name: \"location\",\n            value: formData.location,\n            onChange: handleChange,\n            placeholder: \"Select your neighborhood\",\n            children: chicagoNeighborhoods.map(neighborhood => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: neighborhood,\n              children: neighborhood\n            }, neighborhood, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          isRequired: true,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Occupation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"occupation\",\n            value: formData.occupation,\n            onChange: handleChange,\n            placeholder: \"What do you do?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          isRequired: true,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Education\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            name: \"education\",\n            value: formData.education,\n            onChange: handleChange,\n            placeholder: \"Select your education level\",\n            children: educationOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          isRequired: true,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Bio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n            name: \"bio\",\n            value: formData.bio,\n            onChange: handleChange,\n            placeholder: \"Tell us about yourself\",\n            rows: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          isRequired: true,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Interests\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n            columns: 5,\n            spacing: 2,\n            children: interestEmojis.map(({\n              emoji,\n              label\n            }) => /*#__PURE__*/_jsxDEV(Checkbox, {\n              isChecked: selectedInterests.includes(label),\n              onChange: e => {\n                if (e.target.checked) {\n                  setSelectedInterests(prev => [...prev, label]);\n                } else {\n                  setSelectedInterests(prev => prev.filter(i => i !== label));\n                }\n              },\n              size: \"lg\",\n              p: 2,\n              borderRadius: \"md\",\n              border: \"1px\",\n              borderColor: \"gray.200\",\n              _checked: {\n                bg: 'blue.100',\n                borderColor: 'blue.500',\n                color: 'blue.500'\n              },\n              _hover: {\n                bg: 'blue.50',\n                borderColor: 'blue.300'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                fontSize: \"2xl\",\n                children: emoji\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: \"xs\",\n                mt: 1,\n                children: label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 19\n              }, this)]\n            }, label, true, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          isRequired: true,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Hobbies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n            columns: 5,\n            spacing: 2,\n            children: hobbyEmojis.map(({\n              emoji,\n              label\n            }) => /*#__PURE__*/_jsxDEV(Checkbox, {\n              isChecked: selectedHobbies.includes(label),\n              onChange: e => {\n                if (e.target.checked) {\n                  setSelectedHobbies(prev => [...prev, label]);\n                } else {\n                  setSelectedHobbies(prev => prev.filter(h => h !== label));\n                }\n              },\n              size: \"lg\",\n              p: 2,\n              borderRadius: \"md\",\n              border: \"1px\",\n              borderColor: \"gray.200\",\n              _checked: {\n                bg: 'green.100',\n                borderColor: 'green.500',\n                color: 'green.500'\n              },\n              _hover: {\n                bg: 'green.50',\n                borderColor: 'green.300'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                fontSize: \"2xl\",\n                children: emoji\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 566,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Text, {\n                fontSize: \"xs\",\n                mt: 1,\n                children: label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 567,\n                columnNumber: 19\n              }, this)]\n            }, label, true, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          isRequired: true,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Relationship Goals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            name: \"relationshipGoals\",\n            value: formData.relationshipGoals,\n            onChange: handleChange,\n            placeholder: \"Select your relationship goals\",\n            children: relationshipGoals.map(goal => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: goal,\n              children: goal\n            }, goal, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          isRequired: true,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Smoking Preferences\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            name: \"smoking\",\n            value: formData.smoking,\n            onChange: handleChange,\n            placeholder: \"Select your smoking preferences\",\n            children: smokingOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 591,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          isRequired: true,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Drinking Preferences\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            name: \"drinking\",\n            value: formData.drinking,\n            onChange: handleChange,\n            placeholder: \"Select your drinking preferences\",\n            children: drinkingOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          isRequired: true,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"First Date Ideas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            name: \"firstDateIdeas\",\n            value: formData.firstDateIdeas,\n            onChange: handleChange,\n            placeholder: \"Select your ideal first date\",\n            children: firstDateIdeas.map(idea => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: idea,\n              children: idea\n            }, idea, false, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          isRequired: true,\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: showPassword ? 'text' : 'password',\n              name: \"password\",\n              value: formData.password,\n              onChange: handleChange,\n              placeholder: \"Create a password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n              h: 'full',\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                variant: 'ghost',\n                onClick: () => setShowPassword(showPassword => !showPassword),\n                icon: showPassword ? /*#__PURE__*/_jsxDEV(ViewIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 651,\n                  columnNumber: 40\n                }, this) : /*#__PURE__*/_jsxDEV(ViewOffIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 651,\n                  columnNumber: 55\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 648,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          colorScheme: \"blue\",\n          width: \"full\",\n          children: \"Create Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 360,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfileForm, \"9mGQ4ZfAZOJVgK1wm1kTkoJxBLk=\", false, function () {\n  return [useNavigate, useProfile, useToast, useColorModeValue, useColorModeValue];\n});\n_c = ProfileForm;\nexport default ProfileForm;\nvar _c;\n$RefreshReg$(_c, \"ProfileForm\");","map":{"version":3,"names":["Box","VStack","Text","Container","Heading","FormControl","FormLabel","Input","Textarea","Select","Button","useToast","Modal","ModalOverlay","ModalContent","ModalHeader","ModalBody","ModalCloseButton","useDisclosure","Wrap","WrapItem","HStack","Icon","Link","FaInstagram","useState","useEffect","useNavigate","useProfile","Avatar","IconButton","InputGroup","InputRightElement","Spinner","Progress","Alert","AlertIcon","useColorModeValue","SimpleGrid","Checkbox","CheckboxGroup","ViewIcon","ViewOffIcon","CheckIcon","CloseIcon","jsxDEV","_jsxDEV","MAX_FILE_SIZE","ALLOWED_TYPES","MAX_DIMENSION","COMPRESSION_QUALITY","ProfileForm","_s","navigate","setProfile","toast","bgColor","borderColor","showPassword","setShowPassword","isUploading","setIsUploading","uploadProgress","setUploadProgress","uploadError","setUploadError","formData","setFormData","name","age","location","occupation","education","bio","photo","interests","hobbies","languages","relationshipGoals","smoking","drinking","firstDateIdeas","password","interestEmojis","emoji","label","hobbyEmojis","selectedInterests","setSelectedInterests","selectedHobbies","setSelectedHobbies","prev","join","chicagoNeighborhoods","educationOptions","smokingOptions","drinkingOptions","compressImage","file","Promise","resolve","reject","reader","FileReader","onload","event","img","Image","canvas","document","createElement","width","height","Math","round","ctx","getContext","drawImage","toBlob","blob","Error","type","onerror","src","target","result","readAsDataURL","handlePhotoChange","e","files","includes","size","progressInterval","setInterval","clearInterval","compressedFile","onloadend","newPhoto","setTimeout","title","status","duration","isClosable","error","message","description","handleChange","value","handleSubmit","preventDefault","response","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","ok","json","profile","localStorage","removeItem","console","maxW","mx","p","children","onSubmit","spacing","fileName","_jsxFileName","lineNumber","columnNumber","position","mb","top","left","right","bottom","display","alignItems","justifyContent","bg","borderRadius","color","accept","onChange","id","disabled","as","htmlFor","colorScheme","cursor","isLoading","loadingText","fontSize","isRequired","placeholder","min","max","map","neighborhood","option","rows","columns","isChecked","checked","filter","i","border","_checked","_hover","mt","h","goal","idea","variant","onClick","icon","_c","$RefreshReg$"],"sources":["/Users/mvicente/Projects/simple-dating-app/frontend/src/components/ProfileForm.jsx"],"sourcesContent":["import {\n  Box,\n  VStack,\n  Text,\n  Container,\n  Heading,\n  FormControl,\n  FormLabel,\n  Input,\n  Textarea,\n  Select,\n  Button,\n  useToast,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure,\n  Wrap,\n  WrapItem,\n  HStack,\n  Icon,\n  Link,\n} from '@chakra-ui/react';\nimport { FaInstagram } from 'react-icons/fa';\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useProfile } from '../context/ProfileContext';\nimport {\n  Avatar,\n  IconButton,\n  InputGroup,\n  InputRightElement,\n  Spinner,\n  Progress,\n  Alert,\n  AlertIcon,\n  useColorModeValue,\n  SimpleGrid,\n  Checkbox,\n  CheckboxGroup,\n} from '@chakra-ui/react';\nimport { ViewIcon, ViewOffIcon, CheckIcon, CloseIcon } from '@chakra-ui/icons';\n\n// Constants\nconst MAX_FILE_SIZE = 5 * 1024 * 1024; // 5MB\nconst ALLOWED_TYPES = ['image/jpeg', 'image/png', 'image/gif'];\nconst MAX_DIMENSION = 800;\nconst COMPRESSION_QUALITY = 0.7;\n\nconst ProfileForm = () => {\n  const navigate = useNavigate();\n  const { setProfile } = useProfile();\n  const toast = useToast();\n  const bgColor = useColorModeValue('white', 'gray.800');\n  const borderColor = useColorModeValue('gray.200', 'gray.700');\n\n  // State\n  const [showPassword, setShowPassword] = useState(false);\n  const [isUploading, setIsUploading] = useState(false);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploadError, setUploadError] = useState(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    age: 18,\n    location: '',\n    occupation: '',\n    education: '',\n    bio: '',\n    photo: null,\n    interests: '',\n    hobbies: '',\n    languages: '',\n    relationshipGoals: '',\n    smoking: '',\n    drinking: '',\n    firstDateIdeas: '',\n    password: '',\n  });\n\n  const relationshipGoals = [\n    'Casual Dating',\n    'Serious Relationship',\n    'Marriage',\n    'Friendship First',\n    'Open to All'\n  ];\n\n  const interestEmojis = [\n    { emoji: '🎨', label: 'Art' },\n    { emoji: '🎵', label: 'Music' },\n    { emoji: '��', label: 'Reading' },\n    { emoji: '✈️', label: 'Travel' },\n    { emoji: '🍳', label: 'Cooking' },\n    { emoji: '🎮', label: 'Gaming' },\n    { emoji: '🏃', label: 'Fitness' },\n    { emoji: '🎬', label: 'Movies' },\n    { emoji: '📸', label: 'Photography' },\n    { emoji: '🎭', label: 'Theater' },\n    { emoji: '🏔️', label: 'Outdoors' },\n    { emoji: '🎪', label: 'Circus' },\n    { emoji: '💃', label: 'Dance' },\n    { emoji: '🎨', label: 'Design' },\n    { emoji: '👕', label: 'Fashion' }\n  ];\n\n  const hobbyEmojis = [\n    { emoji: '🏊', label: 'Swimming' },\n    { emoji: '🚴', label: 'Cycling' },\n    { emoji: '🎾', label: 'Tennis' },\n    { emoji: '🏀', label: 'Basketball' },\n    { emoji: '⚽', label: 'Soccer' },\n    { emoji: '🎯', label: 'Archery' },\n    { emoji: '🎨', label: 'Painting' },\n    { emoji: '🎸', label: 'Guitar' },\n    { emoji: '🎹', label: 'Piano' },\n    { emoji: '🎭', label: 'Acting' },\n    { emoji: '📝', label: 'Writing' },\n    { emoji: '🧘', label: 'Yoga' },\n    { emoji: '💃', label: 'Dancing' },\n    { emoji: '🌱', label: 'Gardening' },\n    { emoji: '♟️', label: 'Chess' }\n  ];\n\n  const [selectedInterests, setSelectedInterests] = useState([]);\n  const [selectedHobbies, setSelectedHobbies] = useState([]);\n\n  // Update formData when interests or hobbies change\n  useEffect(() => {\n    setFormData(prev => ({\n      ...prev,\n      interests: selectedInterests.join(', '),\n      hobbies: selectedHobbies.join(', ')\n    }));\n  }, [selectedInterests, selectedHobbies]);\n\n  // Memoized constants\n  const chicagoNeighborhoods = [\n    'Old Town', 'Logan Square', 'Lincoln Park', 'Lakeview', 'Wicker Park',\n    'River North', 'Gold Coast', 'West Loop', 'South Loop', 'Bucktown',\n    'Wrigleyville', 'Andersonville', 'Pilsen', 'Hyde Park', 'Lincoln Square',\n    'Ukrainian Village', 'Bridgeport', 'Ravenswood', 'Edgewater', 'Uptown'\n  ];\n\n  const firstDateIdeas = [\n    'Grab coffee at a local cafe',\n    'Take a walk in the park',\n    'Visit a museum',\n    'Go for drinks at a bar',\n    'Have dinner at a restaurant',\n    'Watch a movie',\n    'Attend a sports game',\n    'Go to a concert',\n    'Take a cooking class',\n    'Visit an art gallery',\n    'Go bowling',\n    'Take a boat tour',\n    'Visit a farmers market',\n    'Go to a comedy show',\n    'Take a pottery class'\n  ];\n\n  const educationOptions = [\n    'High School',\n    'Some College',\n    'Associate Degree',\n    'Bachelor\\'s Degree',\n    'Master\\'s Degree',\n    'Doctorate'\n  ];\n\n  const smokingOptions = [\n    'Just Drink',\n    'Just Smoke (cigs)',\n    'Just Smoke (weed)',\n    'Everything',\n    'None'\n  ];\n\n  const drinkingOptions = [\n    'Just Smoke (cigs)',\n    'Just Smoke (weed)',\n    'Everything',\n    'None'\n  ];\n\n  // Optimized image compression\n  const compressImage = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        const img = new Image();\n        img.onload = () => {\n          const canvas = document.createElement('canvas');\n          let { width, height } = img;\n          \n          // Calculate new dimensions while maintaining aspect ratio\n          if (width > height && width > MAX_DIMENSION) {\n            height = Math.round((height * MAX_DIMENSION) / width);\n            width = MAX_DIMENSION;\n          } else if (height > MAX_DIMENSION) {\n            width = Math.round((width * MAX_DIMENSION) / height);\n            height = MAX_DIMENSION;\n          }\n\n          canvas.width = width;\n          canvas.height = height;\n          const ctx = canvas.getContext('2d');\n          ctx.drawImage(img, 0, 0, width, height);\n\n          canvas.toBlob(\n            (blob) => {\n              if (blob) {\n                resolve(blob);\n              } else {\n                reject(new Error('Failed to compress image'));\n              }\n            },\n            file.type,\n            COMPRESSION_QUALITY\n          );\n        };\n        img.onerror = () => reject(new Error('Failed to load image'));\n        img.src = event.target.result;\n      };\n      reader.onerror = () => reject(new Error('Failed to read file'));\n      reader.readAsDataURL(file);\n    });\n  };\n\n  // Optimized photo upload handler\n  const handlePhotoChange = async (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    setUploadError(null);\n    setUploadProgress(0);\n    setIsUploading(true);\n\n    try {\n      if (!ALLOWED_TYPES.includes(file.type)) {\n        throw new Error('Invalid file type. Please upload JPG, PNG, or GIF.');\n      }\n\n      if (file.size > MAX_FILE_SIZE) {\n        throw new Error('File too large. Maximum size is 5MB.');\n      }\n\n      // Simulate upload progress\n      const progressInterval = setInterval(() => {\n        setUploadProgress(prev => {\n          if (prev >= 90) {\n            clearInterval(progressInterval);\n            return 90;\n          }\n          return prev + 10;\n        });\n      }, 200);\n\n      const compressedFile = await compressImage(file);\n      \n      const reader = new FileReader();\n      reader.onloadend = () => {\n        const newPhoto = reader.result;\n        setFormData(prev => ({\n          ...prev,\n          photo: newPhoto\n        }));\n        // Immediately update the profile context\n        setProfile(prev => ({\n          ...prev,\n          photo: newPhoto\n        }));\n        setUploadProgress(100);\n        setTimeout(() => {\n          setIsUploading(false);\n          setUploadProgress(0);\n          toast({\n            title: 'Photo uploaded successfully',\n            status: 'success',\n            duration: 3000,\n            isClosable: true,\n          });\n        }, 500);\n      };\n      reader.readAsDataURL(compressedFile);\n\n    } catch (error) {\n      setIsUploading(false);\n      setUploadProgress(0);\n      setUploadError(error.message);\n      toast({\n        title: 'Upload failed',\n        description: error.message,\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n    }\n  };\n\n  // Optimized form change handler\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Optimized form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/profile`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.error || 'Failed to create profile');\n      }\n\n      const profile = await response.json();\n      setProfile(profile);\n      \n      // Clear both isNewAccount and newAccountEmail flags\n      localStorage.removeItem('isNewAccount');\n      localStorage.removeItem('newAccountEmail');\n      \n      navigate('/waiting');\n      \n      toast({\n        title: 'Success!',\n        description: 'Your profile has been created.',\n        status: 'success',\n        duration: 3000,\n        isClosable: true,\n      });\n    } catch (error) {\n      console.error('Profile creation error:', error);\n      toast({\n        title: 'Error',\n        description: error.message || 'Failed to create profile. Please try again.',\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n    }\n  };\n\n  return (\n    <Box maxW=\"container.md\" mx=\"auto\" p={4}>\n      <form onSubmit={handleSubmit}>\n        <VStack spacing={4}>\n          {/* Profile Photo */}\n          <FormControl>\n            <FormLabel>Profile Photo</FormLabel>\n            <VStack spacing={2}>\n              <Box position=\"relative\">\n                <Avatar\n                  size=\"xl\"\n                  src={formData.photo}\n                  name={formData.name}\n                  mb={2}\n                />\n                {isUploading && (\n                  <Box\n                    position=\"absolute\"\n                    top=\"0\"\n                    left=\"0\"\n                    right=\"0\"\n                    bottom=\"0\"\n                    display=\"flex\"\n                    alignItems=\"center\"\n                    justifyContent=\"center\"\n                    bg=\"blackAlpha.500\"\n                    borderRadius=\"full\"\n                  >\n                    <Spinner color=\"white\" />\n                  </Box>\n                )}\n              </Box>\n              <Input\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={handlePhotoChange}\n                size=\"sm\"\n                display=\"none\"\n                id=\"photo-upload\"\n                disabled={isUploading}\n              />\n              <Button\n                as=\"label\"\n                htmlFor=\"photo-upload\"\n                colorScheme=\"blue\"\n                size=\"sm\"\n                cursor={isUploading ? \"not-allowed\" : \"pointer\"}\n                isLoading={isUploading}\n                loadingText=\"Uploading...\"\n              >\n                Upload Photo\n              </Button>\n              {uploadProgress > 0 && uploadProgress < 100 && (\n                <Progress value={uploadProgress} size=\"sm\" width=\"100%\" />\n              )}\n              {uploadError && (\n                <Alert status=\"error\" size=\"sm\" borderRadius=\"md\">\n                  <AlertIcon />\n                  {uploadError}\n                </Alert>\n              )}\n              <Text fontSize=\"xs\" color=\"gray.500\">\n                Supported formats: JPG, PNG, GIF (max 5MB)\n              </Text>\n            </VStack>\n          </FormControl>\n\n          <FormControl isRequired>\n            <FormLabel>Name</FormLabel>\n            <Input\n              name=\"name\"\n              value={formData.name}\n              onChange={handleChange}\n              placeholder=\"Your name\"\n            />\n          </FormControl>\n\n          <FormControl isRequired>\n            <FormLabel>Age</FormLabel>\n            <Input\n              name=\"age\"\n              value={formData.age}\n              onChange={handleChange}\n              type=\"number\"\n              min={18}\n              max={100}\n            />\n          </FormControl>\n\n          <FormControl isRequired>\n            <FormLabel>Neighborhood</FormLabel>\n            <Select\n              name=\"location\"\n              value={formData.location}\n              onChange={handleChange}\n              placeholder=\"Select your neighborhood\"\n            >\n              {chicagoNeighborhoods.map((neighborhood) => (\n                <option key={neighborhood} value={neighborhood}>\n                  {neighborhood}\n                </option>\n              ))}\n            </Select>\n          </FormControl>\n\n          <FormControl isRequired>\n            <FormLabel>Occupation</FormLabel>\n            <Input\n              name=\"occupation\"\n              value={formData.occupation}\n              onChange={handleChange}\n              placeholder=\"What do you do?\"\n            />\n          </FormControl>\n\n          <FormControl isRequired>\n            <FormLabel>Education</FormLabel>\n            <Select\n              name=\"education\"\n              value={formData.education}\n              onChange={handleChange}\n              placeholder=\"Select your education level\"\n            >\n              {educationOptions.map((option) => (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              ))}\n            </Select>\n          </FormControl>\n\n          <FormControl isRequired>\n            <FormLabel>Bio</FormLabel>\n            <Textarea\n              name=\"bio\"\n              value={formData.bio}\n              onChange={handleChange}\n              placeholder=\"Tell us about yourself\"\n              rows={4}\n            />\n          </FormControl>\n\n          <FormControl isRequired>\n            <FormLabel>Interests</FormLabel>\n            <SimpleGrid columns={5} spacing={2}>\n              {interestEmojis.map(({ emoji, label }) => (\n                <Checkbox\n                  key={label}\n                  isChecked={selectedInterests.includes(label)}\n                  onChange={(e) => {\n                    if (e.target.checked) {\n                      setSelectedInterests(prev => [...prev, label]);\n                    } else {\n                      setSelectedInterests(prev => prev.filter(i => i !== label));\n                    }\n                  }}\n                  size=\"lg\"\n                  p={2}\n                  borderRadius=\"md\"\n                  border=\"1px\"\n                  borderColor=\"gray.200\"\n                  _checked={{\n                    bg: 'blue.100',\n                    borderColor: 'blue.500',\n                    color: 'blue.500',\n                  }}\n                  _hover={{\n                    bg: 'blue.50',\n                    borderColor: 'blue.300',\n                  }}\n                >\n                  <Text fontSize=\"2xl\">{emoji}</Text>\n                  <Text fontSize=\"xs\" mt={1}>{label}</Text>\n                </Checkbox>\n              ))}\n            </SimpleGrid>\n          </FormControl>\n\n          <FormControl isRequired>\n            <FormLabel>Hobbies</FormLabel>\n            <SimpleGrid columns={5} spacing={2}>\n              {hobbyEmojis.map(({ emoji, label }) => (\n                <Checkbox\n                  key={label}\n                  isChecked={selectedHobbies.includes(label)}\n                  onChange={(e) => {\n                    if (e.target.checked) {\n                      setSelectedHobbies(prev => [...prev, label]);\n                    } else {\n                      setSelectedHobbies(prev => prev.filter(h => h !== label));\n                    }\n                  }}\n                  size=\"lg\"\n                  p={2}\n                  borderRadius=\"md\"\n                  border=\"1px\"\n                  borderColor=\"gray.200\"\n                  _checked={{\n                    bg: 'green.100',\n                    borderColor: 'green.500',\n                    color: 'green.500',\n                  }}\n                  _hover={{\n                    bg: 'green.50',\n                    borderColor: 'green.300',\n                  }}\n                >\n                  <Text fontSize=\"2xl\">{emoji}</Text>\n                  <Text fontSize=\"xs\" mt={1}>{label}</Text>\n                </Checkbox>\n              ))}\n            </SimpleGrid>\n          </FormControl>\n\n          <FormControl isRequired>\n            <FormLabel>Relationship Goals</FormLabel>\n            <Select\n              name=\"relationshipGoals\"\n              value={formData.relationshipGoals}\n              onChange={handleChange}\n              placeholder=\"Select your relationship goals\"\n            >\n              {relationshipGoals.map((goal) => (\n                <option key={goal} value={goal}>\n                  {goal}\n                </option>\n              ))}\n            </Select>\n          </FormControl>\n\n          <FormControl isRequired>\n            <FormLabel>Smoking Preferences</FormLabel>\n            <Select\n              name=\"smoking\"\n              value={formData.smoking}\n              onChange={handleChange}\n              placeholder=\"Select your smoking preferences\"\n            >\n              {smokingOptions.map((option) => (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              ))}\n            </Select>\n          </FormControl>\n\n          <FormControl isRequired>\n            <FormLabel>Drinking Preferences</FormLabel>\n            <Select\n              name=\"drinking\"\n              value={formData.drinking}\n              onChange={handleChange}\n              placeholder=\"Select your drinking preferences\"\n            >\n              {drinkingOptions.map((option) => (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              ))}\n            </Select>\n          </FormControl>\n\n          <FormControl isRequired>\n            <FormLabel>First Date Ideas</FormLabel>\n            <Select\n              name=\"firstDateIdeas\"\n              value={formData.firstDateIdeas}\n              onChange={handleChange}\n              placeholder=\"Select your ideal first date\"\n            >\n              {firstDateIdeas.map((idea) => (\n                <option key={idea} value={idea}>\n                  {idea}\n                </option>\n              ))}\n            </Select>\n          </FormControl>\n\n          <FormControl isRequired>\n            <FormLabel>Password</FormLabel>\n            <InputGroup>\n              <Input\n                type={showPassword ? 'text' : 'password'}\n                name=\"password\"\n                value={formData.password}\n                onChange={handleChange}\n                placeholder=\"Create a password\"\n              />\n              <InputRightElement h={'full'}>\n                <IconButton\n                  variant={'ghost'}\n                  onClick={() => setShowPassword((showPassword) => !showPassword)}\n                  icon={showPassword ? <ViewIcon /> : <ViewOffIcon />}\n                />\n              </InputRightElement>\n            </InputGroup>\n          </FormControl>\n\n          <Button type=\"submit\" colorScheme=\"blue\" width=\"full\">\n            Create Profile\n          </Button>\n        </VStack>\n      </form>\n    </Box>\n  );\n};\n\nexport default ProfileForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}