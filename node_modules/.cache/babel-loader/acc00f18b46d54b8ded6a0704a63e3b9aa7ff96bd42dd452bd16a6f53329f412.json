{"ast":null,"code":"'use client';\n\nvar _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils';\nimport { useFormControlContext, useFormControlStyles } from './form-control.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\nconst FormLabel = _s(forwardRef(_c = _s(function FormLabel2(passedProps, ref) {\n  var _field$getLabelProps;\n  _s();\n  const styles = useStyleConfig(\"FormLabel\", passedProps);\n  const props = omitThemingProps(passedProps);\n  const {\n    className,\n    children,\n    requiredIndicator = /* @__PURE__ */jsx(RequiredIndicator, {}),\n    optionalIndicator = null,\n    ...rest\n  } = props;\n  const field = useFormControlContext();\n  const ownProps = (_field$getLabelProps = field === null || field === void 0 ? void 0 : field.getLabelProps(rest, ref)) !== null && _field$getLabelProps !== void 0 ? _field$getLabelProps : {\n    ref,\n    ...rest\n  };\n  return /* @__PURE__ */jsxs(chakra.label, {\n    ...ownProps,\n    className: cx(\"chakra-form__label\", props.className),\n    __css: {\n      display: \"block\",\n      textAlign: \"start\",\n      ...styles\n    },\n    children: [children, field !== null && field !== void 0 && field.isRequired ? requiredIndicator : optionalIndicator]\n  });\n}, \"iT2G1qt7NHDMBhDHOfQADKkGALI=\", false, function () {\n  return [useStyleConfig, useFormControlContext];\n})), \"iT2G1qt7NHDMBhDHOfQADKkGALI=\", false, function () {\n  return [useStyleConfig, useFormControlContext];\n});\n_c2 = FormLabel;\nFormLabel.displayName = \"FormLabel\";\nconst RequiredIndicator = _s2(forwardRef(_c3 = _s2(function RequiredIndicator2(props, ref) {\n  _s2();\n  const field = useFormControlContext();\n  const styles = useFormControlStyles();\n  if (!(field !== null && field !== void 0 && field.isRequired)) return null;\n  const className = cx(\"chakra-form__required-indicator\", props.className);\n  return /* @__PURE__ */jsx(chakra.span, {\n    ...(field === null || field === void 0 ? void 0 : field.getRequiredIndicatorProps(props, ref)),\n    __css: styles.requiredIndicator,\n    className\n  });\n}, \"tLCdz1AfZmisrLoiFDOwxa/H5SI=\", false, function () {\n  return [useFormControlContext, useFormControlStyles];\n})), \"tLCdz1AfZmisrLoiFDOwxa/H5SI=\", false, function () {\n  return [useFormControlContext, useFormControlStyles];\n});\n_c4 = RequiredIndicator;\nRequiredIndicator.displayName = \"RequiredIndicator\";\nexport { FormLabel, RequiredIndicator };\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"FormLabel$forwardRef\");\n$RefreshReg$(_c2, \"FormLabel\");\n$RefreshReg$(_c3, \"RequiredIndicator$forwardRef\");\n$RefreshReg$(_c4, \"RequiredIndicator\");","map":{"version":3,"names":["_s","$RefreshSig$","_s2","jsxs","jsx","omitThemingProps","cx","useFormControlContext","useFormControlStyles","forwardRef","useStyleConfig","chakra","FormLabel","_c","FormLabel2","passedProps","ref","_field$getLabelProps","styles","props","className","children","requiredIndicator","RequiredIndicator","optionalIndicator","rest","field","ownProps","getLabelProps","label","__css","display","textAlign","isRequired","_c2","displayName","_c3","RequiredIndicator2","span","getRequiredIndicatorProps","_c4","$RefreshReg$"],"sources":["/Users/mvicente/Projects/simple-dating-app/frontend/src/node_modules/@chakra-ui/react/dist/esm/form-control/form-label.mjs"],"sourcesContent":["'use client';\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils';\nimport { useFormControlContext, useFormControlStyles } from './form-control.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\nimport { chakra } from '../system/factory.mjs';\n\nconst FormLabel = forwardRef(\n  function FormLabel2(passedProps, ref) {\n    const styles = useStyleConfig(\"FormLabel\", passedProps);\n    const props = omitThemingProps(passedProps);\n    const {\n      className,\n      children,\n      requiredIndicator = /* @__PURE__ */ jsx(RequiredIndicator, {}),\n      optionalIndicator = null,\n      ...rest\n    } = props;\n    const field = useFormControlContext();\n    const ownProps = field?.getLabelProps(rest, ref) ?? { ref, ...rest };\n    return /* @__PURE__ */ jsxs(\n      chakra.label,\n      {\n        ...ownProps,\n        className: cx(\"chakra-form__label\", props.className),\n        __css: {\n          display: \"block\",\n          textAlign: \"start\",\n          ...styles\n        },\n        children: [\n          children,\n          field?.isRequired ? requiredIndicator : optionalIndicator\n        ]\n      }\n    );\n  }\n);\nFormLabel.displayName = \"FormLabel\";\nconst RequiredIndicator = forwardRef(\n  function RequiredIndicator2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    if (!field?.isRequired)\n      return null;\n    const className = cx(\"chakra-form__required-indicator\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.span,\n      {\n        ...field?.getRequiredIndicatorProps(props, ref),\n        __css: styles.requiredIndicator,\n        className\n      }\n    );\n  }\n);\nRequiredIndicator.displayName = \"RequiredIndicator\";\n\nexport { FormLabel, RequiredIndicator };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}