{"ast":null,"code":"'use client';\n\nvar _s = $RefreshSig$();\nimport { jsx } from 'react/jsx-runtime';\nimport { usePrevious } from '@chakra-ui/hooks';\nimport { cssVar, omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils';\nimport { keyframes } from '@emotion/react';\nimport { useIsFirstRender } from './use-is-first-render.mjs';\nimport { useToken } from '../system/hooks.mjs';\nimport { chakra } from '../system/factory.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\nconst StyledSkeleton = chakra(\"div\", {\n  baseStyle: {\n    boxShadow: \"none\",\n    backgroundClip: \"padding-box\",\n    cursor: \"default\",\n    color: \"transparent\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n    \"&::before, &::after, *\": {\n      visibility: \"hidden\"\n    }\n  }\n});\n_c = StyledSkeleton;\nconst $startColor = cssVar(\"skeleton-start-color\");\nconst $endColor = cssVar(\"skeleton-end-color\");\nconst fade = keyframes({\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n});\nconst bgFade = keyframes({\n  from: {\n    borderColor: $startColor.reference,\n    background: $startColor.reference\n  },\n  to: {\n    borderColor: $endColor.reference,\n    background: $endColor.reference\n  }\n});\nconst Skeleton = _s(forwardRef(_c2 = _s((props, ref) => {\n  _s();\n  const skeletonProps = {\n    ...props,\n    fadeDuration: typeof props.fadeDuration === \"number\" ? props.fadeDuration : 0.4,\n    speed: typeof props.speed === \"number\" ? props.speed : 0.8\n  };\n  const styles = useStyleConfig(\"Skeleton\", skeletonProps);\n  const isFirstRender = useIsFirstRender();\n  const {\n    startColor = \"\",\n    endColor = \"\",\n    isLoaded,\n    fadeDuration,\n    speed,\n    className,\n    fitContent,\n    animation: animationProp,\n    ...rest\n  } = omitThemingProps(skeletonProps);\n  const [startColorVar, endColorVar] = useToken(\"colors\", [startColor, endColor]);\n  const wasPreviouslyLoaded = usePrevious(isLoaded);\n  const _className = cx(\"chakra-skeleton\", className);\n  const cssVarStyles = {\n    ...(startColorVar && {\n      [$startColor.variable]: startColorVar\n    }),\n    ...(endColorVar && {\n      [$endColor.variable]: endColorVar\n    })\n  };\n  if (isLoaded) {\n    const animation = isFirstRender || wasPreviouslyLoaded ? \"none\" : `${fade} ${fadeDuration}s`;\n    return /* @__PURE__ */jsx(chakra.div, {\n      ref,\n      className: _className,\n      __css: {\n        animation\n      },\n      ...rest\n    });\n  }\n  return /* @__PURE__ */jsx(StyledSkeleton, {\n    ref,\n    className: _className,\n    ...rest,\n    __css: {\n      width: fitContent ? \"fit-content\" : void 0,\n      ...styles,\n      ...cssVarStyles,\n      _dark: {\n        ...styles[\"_dark\"],\n        ...cssVarStyles\n      },\n      animation: animationProp || `${speed}s linear infinite alternate ${bgFade}`\n    }\n  });\n}, \"AxZ3URUJRmtbIKJ1ZszFUyWNIhQ=\", false, function () {\n  return [useStyleConfig, useIsFirstRender, useToken, usePrevious];\n})), \"AxZ3URUJRmtbIKJ1ZszFUyWNIhQ=\", false, function () {\n  return [useStyleConfig, useIsFirstRender, useToken, usePrevious];\n});\n_c3 = Skeleton;\nSkeleton.displayName = \"Skeleton\";\nexport { Skeleton };\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledSkeleton\");\n$RefreshReg$(_c2, \"Skeleton$forwardRef\");\n$RefreshReg$(_c3, \"Skeleton\");","map":{"version":3,"names":["_s","$RefreshSig$","jsx","usePrevious","cssVar","omitThemingProps","cx","keyframes","useIsFirstRender","useToken","chakra","forwardRef","useStyleConfig","StyledSkeleton","baseStyle","boxShadow","backgroundClip","cursor","color","pointerEvents","userSelect","visibility","_c","$startColor","$endColor","fade","from","opacity","to","bgFade","borderColor","reference","background","Skeleton","_c2","props","ref","skeletonProps","fadeDuration","speed","styles","isFirstRender","startColor","endColor","isLoaded","className","fitContent","animation","animationProp","rest","startColorVar","endColorVar","wasPreviouslyLoaded","_className","cssVarStyles","variable","div","__css","width","_dark","_c3","displayName","$RefreshReg$"],"sources":["/Users/mvicente/Projects/simple-dating-app/frontend/src/node_modules/@chakra-ui/react/dist/esm/skeleton/skeleton.mjs"],"sourcesContent":["'use client';\nimport { jsx } from 'react/jsx-runtime';\nimport { usePrevious } from '@chakra-ui/hooks';\nimport { cssVar, omitThemingProps } from '@chakra-ui/styled-system';\nimport { cx } from '@chakra-ui/utils';\nimport { keyframes } from '@emotion/react';\nimport { useIsFirstRender } from './use-is-first-render.mjs';\nimport { useToken } from '../system/hooks.mjs';\nimport { chakra } from '../system/factory.mjs';\nimport { forwardRef } from '../system/forward-ref.mjs';\nimport { useStyleConfig } from '../system/use-style-config.mjs';\n\nconst StyledSkeleton = chakra(\"div\", {\n  baseStyle: {\n    boxShadow: \"none\",\n    backgroundClip: \"padding-box\",\n    cursor: \"default\",\n    color: \"transparent\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n    \"&::before, &::after, *\": {\n      visibility: \"hidden\"\n    }\n  }\n});\nconst $startColor = cssVar(\"skeleton-start-color\");\nconst $endColor = cssVar(\"skeleton-end-color\");\nconst fade = keyframes({\n  from: { opacity: 0 },\n  to: { opacity: 1 }\n});\nconst bgFade = keyframes({\n  from: {\n    borderColor: $startColor.reference,\n    background: $startColor.reference\n  },\n  to: {\n    borderColor: $endColor.reference,\n    background: $endColor.reference\n  }\n});\nconst Skeleton = forwardRef((props, ref) => {\n  const skeletonProps = {\n    ...props,\n    fadeDuration: typeof props.fadeDuration === \"number\" ? props.fadeDuration : 0.4,\n    speed: typeof props.speed === \"number\" ? props.speed : 0.8\n  };\n  const styles = useStyleConfig(\"Skeleton\", skeletonProps);\n  const isFirstRender = useIsFirstRender();\n  const {\n    startColor = \"\",\n    endColor = \"\",\n    isLoaded,\n    fadeDuration,\n    speed,\n    className,\n    fitContent,\n    animation: animationProp,\n    ...rest\n  } = omitThemingProps(skeletonProps);\n  const [startColorVar, endColorVar] = useToken(\"colors\", [\n    startColor,\n    endColor\n  ]);\n  const wasPreviouslyLoaded = usePrevious(isLoaded);\n  const _className = cx(\"chakra-skeleton\", className);\n  const cssVarStyles = {\n    ...startColorVar && { [$startColor.variable]: startColorVar },\n    ...endColorVar && { [$endColor.variable]: endColorVar }\n  };\n  if (isLoaded) {\n    const animation = isFirstRender || wasPreviouslyLoaded ? \"none\" : `${fade} ${fadeDuration}s`;\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ref,\n        className: _className,\n        __css: { animation },\n        ...rest\n      }\n    );\n  }\n  return /* @__PURE__ */ jsx(\n    StyledSkeleton,\n    {\n      ref,\n      className: _className,\n      ...rest,\n      __css: {\n        width: fitContent ? \"fit-content\" : void 0,\n        ...styles,\n        ...cssVarStyles,\n        _dark: { ...styles[\"_dark\"], ...cssVarStyles },\n        animation: animationProp || `${speed}s linear infinite alternate ${bgFade}`\n      }\n    }\n  );\n});\nSkeleton.displayName = \"Skeleton\";\n\nexport { Skeleton };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}